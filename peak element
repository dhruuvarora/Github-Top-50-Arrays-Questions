# Find a peak element which is not smaller than its neighbors 

link : https://www.geeksforgeeks.org/problems/peak-element/1

class Solution
{
public:
    int peakElement(int arr[], int n)
    {
        // Edge case: if there's only one element, return its index (0)
        if (n == 1) {
            return 0;
        }

        for (int i = 0; i < n; i++) {
            // Check for the first element
            if (i == 0 && arr[i] >= arr[i + 1]) {
                return i;
            }
            // Check for the last element
            if (i == n - 1 && arr[i] >= arr[i - 1]) {
                return i;
            }
            // Check for middle elements
            if (i > 0 && i < n - 1 && arr[i] >= arr[i - 1] && arr[i] >= arr[i + 1]) {
                return i;
            }
        }

        return -1; // This will never be reached if there's always a peak element
    }
};
